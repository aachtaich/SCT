/**
 * generated by Xtext 2.10.0
 */
package org.xtext.example.stateconstrainttransition.stateConstraintTransition.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

import org.xtext.example.stateconstrainttransition.stateConstraintTransition.StateConstraintTransitionPackage;
import org.xtext.example.stateconstrainttransition.stateConstraintTransition.Variable;
import org.xtext.example.stateconstrainttransition.stateConstraintTransition.multiple;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Variable</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.stateconstrainttransition.stateConstraintTransition.impl.VariableImpl#getVarType <em>Var Type</em>}</li>
 *   <li>{@link org.xtext.example.stateconstrainttransition.stateConstraintTransition.impl.VariableImpl#getContext <em>Context</em>}</li>
 *   <li>{@link org.xtext.example.stateconstrainttransition.stateConstraintTransition.impl.VariableImpl#getInEnumeration <em>In Enumeration</em>}</li>
 *   <li>{@link org.xtext.example.stateconstrainttransition.stateConstraintTransition.impl.VariableImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.stateconstrainttransition.stateConstraintTransition.impl.VariableImpl#getIsMultiInstanciated <em>Is Multi Instanciated</em>}</li>
 *   <li>{@link org.xtext.example.stateconstrainttransition.stateConstraintTransition.impl.VariableImpl#getDomain <em>Domain</em>}</li>
 *   <li>{@link org.xtext.example.stateconstrainttransition.stateConstraintTransition.impl.VariableImpl#getValues <em>Values</em>}</li>
 * </ul>
 *
 * @generated
 */
public class VariableImpl extends MinimalEObjectImpl.Container implements Variable
{
  /**
   * The default value of the '{@link #getVarType() <em>Var Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVarType()
   * @generated
   * @ordered
   */
  protected static final String VAR_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVarType() <em>Var Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVarType()
   * @generated
   * @ordered
   */
  protected String varType = VAR_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getContext() <em>Context</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContext()
   * @generated
   * @ordered
   */
  protected static final String CONTEXT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getContext() <em>Context</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContext()
   * @generated
   * @ordered
   */
  protected String context = CONTEXT_EDEFAULT;

  /**
   * The default value of the '{@link #getInEnumeration() <em>In Enumeration</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInEnumeration()
   * @generated
   * @ordered
   */
  protected static final String IN_ENUMERATION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getInEnumeration() <em>In Enumeration</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInEnumeration()
   * @generated
   * @ordered
   */
  protected String inEnumeration = IN_ENUMERATION_EDEFAULT;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getIsMultiInstanciated() <em>Is Multi Instanciated</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIsMultiInstanciated()
   * @generated
   * @ordered
   */
  protected multiple isMultiInstanciated;

  /**
   * The default value of the '{@link #getDomain() <em>Domain</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDomain()
   * @generated
   * @ordered
   */
  protected static final String DOMAIN_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDomain() <em>Domain</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDomain()
   * @generated
   * @ordered
   */
  protected String domain = DOMAIN_EDEFAULT;

  /**
   * The cached value of the '{@link #getValues() <em>Values</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValues()
   * @generated
   * @ordered
   */
  protected EList<String> values;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected VariableImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return StateConstraintTransitionPackage.Literals.VARIABLE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getVarType()
  {
    return varType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVarType(String newVarType)
  {
    String oldVarType = varType;
    varType = newVarType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StateConstraintTransitionPackage.VARIABLE__VAR_TYPE, oldVarType, varType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getContext()
  {
    return context;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setContext(String newContext)
  {
    String oldContext = context;
    context = newContext;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StateConstraintTransitionPackage.VARIABLE__CONTEXT, oldContext, context));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getInEnumeration()
  {
    return inEnumeration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInEnumeration(String newInEnumeration)
  {
    String oldInEnumeration = inEnumeration;
    inEnumeration = newInEnumeration;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StateConstraintTransitionPackage.VARIABLE__IN_ENUMERATION, oldInEnumeration, inEnumeration));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StateConstraintTransitionPackage.VARIABLE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public multiple getIsMultiInstanciated()
  {
    return isMultiInstanciated;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIsMultiInstanciated(multiple newIsMultiInstanciated, NotificationChain msgs)
  {
    multiple oldIsMultiInstanciated = isMultiInstanciated;
    isMultiInstanciated = newIsMultiInstanciated;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StateConstraintTransitionPackage.VARIABLE__IS_MULTI_INSTANCIATED, oldIsMultiInstanciated, newIsMultiInstanciated);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIsMultiInstanciated(multiple newIsMultiInstanciated)
  {
    if (newIsMultiInstanciated != isMultiInstanciated)
    {
      NotificationChain msgs = null;
      if (isMultiInstanciated != null)
        msgs = ((InternalEObject)isMultiInstanciated).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StateConstraintTransitionPackage.VARIABLE__IS_MULTI_INSTANCIATED, null, msgs);
      if (newIsMultiInstanciated != null)
        msgs = ((InternalEObject)newIsMultiInstanciated).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StateConstraintTransitionPackage.VARIABLE__IS_MULTI_INSTANCIATED, null, msgs);
      msgs = basicSetIsMultiInstanciated(newIsMultiInstanciated, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StateConstraintTransitionPackage.VARIABLE__IS_MULTI_INSTANCIATED, newIsMultiInstanciated, newIsMultiInstanciated));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDomain()
  {
    return domain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDomain(String newDomain)
  {
    String oldDomain = domain;
    domain = newDomain;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StateConstraintTransitionPackage.VARIABLE__DOMAIN, oldDomain, domain));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<String> getValues()
  {
    if (values == null)
    {
      values = new EDataTypeEList<String>(String.class, this, StateConstraintTransitionPackage.VARIABLE__VALUES);
    }
    return values;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case StateConstraintTransitionPackage.VARIABLE__IS_MULTI_INSTANCIATED:
        return basicSetIsMultiInstanciated(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case StateConstraintTransitionPackage.VARIABLE__VAR_TYPE:
        return getVarType();
      case StateConstraintTransitionPackage.VARIABLE__CONTEXT:
        return getContext();
      case StateConstraintTransitionPackage.VARIABLE__IN_ENUMERATION:
        return getInEnumeration();
      case StateConstraintTransitionPackage.VARIABLE__NAME:
        return getName();
      case StateConstraintTransitionPackage.VARIABLE__IS_MULTI_INSTANCIATED:
        return getIsMultiInstanciated();
      case StateConstraintTransitionPackage.VARIABLE__DOMAIN:
        return getDomain();
      case StateConstraintTransitionPackage.VARIABLE__VALUES:
        return getValues();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case StateConstraintTransitionPackage.VARIABLE__VAR_TYPE:
        setVarType((String)newValue);
        return;
      case StateConstraintTransitionPackage.VARIABLE__CONTEXT:
        setContext((String)newValue);
        return;
      case StateConstraintTransitionPackage.VARIABLE__IN_ENUMERATION:
        setInEnumeration((String)newValue);
        return;
      case StateConstraintTransitionPackage.VARIABLE__NAME:
        setName((String)newValue);
        return;
      case StateConstraintTransitionPackage.VARIABLE__IS_MULTI_INSTANCIATED:
        setIsMultiInstanciated((multiple)newValue);
        return;
      case StateConstraintTransitionPackage.VARIABLE__DOMAIN:
        setDomain((String)newValue);
        return;
      case StateConstraintTransitionPackage.VARIABLE__VALUES:
        getValues().clear();
        getValues().addAll((Collection<? extends String>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case StateConstraintTransitionPackage.VARIABLE__VAR_TYPE:
        setVarType(VAR_TYPE_EDEFAULT);
        return;
      case StateConstraintTransitionPackage.VARIABLE__CONTEXT:
        setContext(CONTEXT_EDEFAULT);
        return;
      case StateConstraintTransitionPackage.VARIABLE__IN_ENUMERATION:
        setInEnumeration(IN_ENUMERATION_EDEFAULT);
        return;
      case StateConstraintTransitionPackage.VARIABLE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case StateConstraintTransitionPackage.VARIABLE__IS_MULTI_INSTANCIATED:
        setIsMultiInstanciated((multiple)null);
        return;
      case StateConstraintTransitionPackage.VARIABLE__DOMAIN:
        setDomain(DOMAIN_EDEFAULT);
        return;
      case StateConstraintTransitionPackage.VARIABLE__VALUES:
        getValues().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case StateConstraintTransitionPackage.VARIABLE__VAR_TYPE:
        return VAR_TYPE_EDEFAULT == null ? varType != null : !VAR_TYPE_EDEFAULT.equals(varType);
      case StateConstraintTransitionPackage.VARIABLE__CONTEXT:
        return CONTEXT_EDEFAULT == null ? context != null : !CONTEXT_EDEFAULT.equals(context);
      case StateConstraintTransitionPackage.VARIABLE__IN_ENUMERATION:
        return IN_ENUMERATION_EDEFAULT == null ? inEnumeration != null : !IN_ENUMERATION_EDEFAULT.equals(inEnumeration);
      case StateConstraintTransitionPackage.VARIABLE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case StateConstraintTransitionPackage.VARIABLE__IS_MULTI_INSTANCIATED:
        return isMultiInstanciated != null;
      case StateConstraintTransitionPackage.VARIABLE__DOMAIN:
        return DOMAIN_EDEFAULT == null ? domain != null : !DOMAIN_EDEFAULT.equals(domain);
      case StateConstraintTransitionPackage.VARIABLE__VALUES:
        return values != null && !values.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (varType: ");
    result.append(varType);
    result.append(", context: ");
    result.append(context);
    result.append(", inEnumeration: ");
    result.append(inEnumeration);
    result.append(", name: ");
    result.append(name);
    result.append(", domain: ");
    result.append(domain);
    result.append(", values: ");
    result.append(values);
    result.append(')');
    return result.toString();
  }

} //VariableImpl
