/*
 * generated by Xtext 2.10.0
 */
grammar PsiInternalStateConstraintTransition;

options {
	superClass=AbstractPsiAntlrParser;
}

@lexer::header {
package org.xtext.example.stateconstrainttransition.idea.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.stateconstrainttransition.idea.parser.antlr.internal;

import org.eclipse.xtext.idea.parser.AbstractPsiAntlrParser;
import org.xtext.example.stateconstrainttransition.idea.lang.StateConstraintTransitionElementTypeProvider;
import org.eclipse.xtext.idea.parser.TokenTypeProvider;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.xtext.example.stateconstrainttransition.services.StateConstraintTransitionGrammarAccess;

import com.intellij.lang.PsiBuilder;
}

@parser::members {

	protected StateConstraintTransitionGrammarAccess grammarAccess;

	protected StateConstraintTransitionElementTypeProvider elementTypeProvider;

	public PsiInternalStateConstraintTransitionParser(PsiBuilder builder, TokenStream input, StateConstraintTransitionElementTypeProvider elementTypeProvider, StateConstraintTransitionGrammarAccess grammarAccess) {
		this(input);
		setPsiBuilder(builder);
		this.grammarAccess = grammarAccess;
		this.elementTypeProvider = elementTypeProvider;
	}

	@Override
	protected String getFirstRuleName() {
		return "Model";
	}

}

//Entry rule entryRuleModel
entryRuleModel returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getModelElementType()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getModel_StateMachineKeyword_0ElementType());
		}
		otherlv_0='stateMachine'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getModel_NameIDTerminalRuleCall_1_0ElementType());
				}
				lv_name_1_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_1_0);
				}
			)
		)
		(
			(
				{
					markComposite(elementTypeProvider.getModel_VariableVariableParserRuleCall_2_0ElementType());
				}
				lv_variable_2_0=ruleVariable
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)+
		(
			(
				{
					markComposite(elementTypeProvider.getModel_FlexConstraintsConstraintParserRuleCall_3_0ElementType());
				}
				lv_flexConstraints_3_0=ruleConstraint
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)*
		(
			(
				{
					markComposite(elementTypeProvider.getModel_StateStateParserRuleCall_4_0ElementType());
				}
				lv_state_4_0=ruleState
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)+
		(
			(
				{
					markComposite(elementTypeProvider.getModel_TransitionTransitionParserRuleCall_5_0ElementType());
				}
				lv_transition_5_0=ruleTransition
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)+
	)
;

//Entry rule entryRuleVariable
entryRuleVariable returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getVariableElementType()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [Boolean current=false]
:
	(
		(
			(
				{
					markComposite(elementTypeProvider.getVariable_VarTypeVarTypeParserRuleCall_0_0ElementType());
				}
				lv_varType_0_0=ruleVarType
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		(
			(
				{
					markLeaf(elementTypeProvider.getVariable_ContextParamKeyword_1_0ElementType());
				}
				lv_context_1_0='Param'
				{
					doneLeaf(lv_context_1_0);
				}
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
		(
			(
				{
					markLeaf(elementTypeProvider.getVariable_InEnumerationEnumKeyword_2_0ElementType());
				}
				lv_inEnumeration_2_0='Enum'
				{
					doneLeaf(lv_inEnumeration_2_0);
				}
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
		(
			(
				{
					markLeaf(elementTypeProvider.getVariable_NameIDTerminalRuleCall_3_0ElementType());
				}
				lv_name_3_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_3_0);
				}
			)
		)
		(
			(
				{
					markComposite(elementTypeProvider.getVariable_IsMultiInstanciatedMultipleParserRuleCall_4_0ElementType());
				}
				lv_isMultiInstanciated_4_0=rulemultiple
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
		(
			(
				{
					markComposite(elementTypeProvider.getVariable_DomainDomainParserRuleCall_5_0ElementType());
				}
				lv_domain_5_0=ruleDomain
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
		(
			(
				{
					markComposite(elementTypeProvider.getVariable_ValuesEnumerationParserRuleCall_6_0ElementType());
				}
				lv_values_6_0=ruleEnumeration
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
	)
;

//Entry rule entryRuleVarType
entryRuleVarType returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getVarTypeElementType()); }
	iv_ruleVarType=ruleVarType
	{ $current=$iv_ruleVarType.current; }
	EOF;

// Rule VarType
ruleVarType returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getVarType_StringKeyword_0ElementType());
		}
		kw='String'
		{
			doneLeaf(kw);
		}
		    |
		{
			markLeaf(elementTypeProvider.getVarType_IntegerKeyword_1ElementType());
		}
		kw='Integer'
		{
			doneLeaf(kw);
		}
		    |
		{
			markLeaf(elementTypeProvider.getVarType_FloatKeyword_2ElementType());
		}
		kw='Float'
		{
			doneLeaf(kw);
		}
		    |
		{
			markLeaf(elementTypeProvider.getVarType_BooleanKeyword_3ElementType());
		}
		kw='Boolean'
		{
			doneLeaf(kw);
		}
	)
;

//Entry rule entryRulemultiple
entryRulemultiple returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getMultipleElementType()); }
	iv_rulemultiple=rulemultiple
	{ $current=$iv_rulemultiple.current; }
	EOF;

// Rule multiple
rulemultiple returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getMultiple_LeftSquareBracketKeyword_0ElementType());
		}
		otherlv_0='['
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getMultiple_MinimumMinParserRuleCall_1_0ElementType());
				}
				lv_minimum_1_0=rulemin
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getMultiple_CommaKeyword_2ElementType());
		}
		otherlv_2=','
		{
			doneLeaf(otherlv_2);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getMultiple_MaximumMaxParserRuleCall_3_0ElementType());
				}
				lv_maximum_3_0=rulemax
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getMultiple_RightSquareBracketKeyword_4ElementType());
		}
		otherlv_4=']'
		{
			doneLeaf(otherlv_4);
		}
	)
;

//Entry rule entryRuleDomain
entryRuleDomain returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getDomainElementType()); }
	iv_ruleDomain=ruleDomain
	{ $current=$iv_ruleDomain.current; }
	EOF;

// Rule Domain
ruleDomain returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getDomain_FloatDomainParserRuleCall_0ElementType());
		}
		ruleFloatDomain
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getDomain_IntDomainParserRuleCall_1ElementType());
		}
		ruleIntDomain
		{
			doneComposite();
		}
	)
;

//Entry rule entryRuleFloatDomain
entryRuleFloatDomain returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getFloatDomainElementType()); }
	iv_ruleFloatDomain=ruleFloatDomain
	{ $current=$iv_ruleFloatDomain.current; }
	EOF;

// Rule FloatDomain
ruleFloatDomain returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getFloatDomain_LeftSquareBracketKeyword_0ElementType());
		}
		kw='['
		{
			doneLeaf(kw);
		}
		{
			markComposite(elementTypeProvider.getFloatDomain_IntValueParserRuleCall_1ElementType());
		}
		ruleIntValue
		{
			doneComposite();
		}
		{
			markLeaf(elementTypeProvider.getFloatDomain_FullStopKeyword_2ElementType());
		}
		kw='.'
		{
			doneLeaf(kw);
		}
		{
			markComposite(elementTypeProvider.getFloatDomain_IntValueParserRuleCall_3ElementType());
		}
		ruleIntValue
		{
			doneComposite();
		}
		{
			markLeaf(elementTypeProvider.getFloatDomain_FullStopFullStopKeyword_4ElementType());
		}
		kw='..'
		{
			doneLeaf(kw);
		}
		{
			markComposite(elementTypeProvider.getFloatDomain_IntValueParserRuleCall_5ElementType());
		}
		ruleIntValue
		{
			doneComposite();
		}
		{
			markLeaf(elementTypeProvider.getFloatDomain_FullStopKeyword_6ElementType());
		}
		kw='.'
		{
			doneLeaf(kw);
		}
		{
			markComposite(elementTypeProvider.getFloatDomain_IntValueParserRuleCall_7ElementType());
		}
		ruleIntValue
		{
			doneComposite();
		}
		{
			markLeaf(elementTypeProvider.getFloatDomain_RightSquareBracketKeyword_8ElementType());
		}
		kw=']'
		{
			doneLeaf(kw);
		}
	)
;

//Entry rule entryRuleIntDomain
entryRuleIntDomain returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getIntDomainElementType()); }
	iv_ruleIntDomain=ruleIntDomain
	{ $current=$iv_ruleIntDomain.current; }
	EOF;

// Rule IntDomain
ruleIntDomain returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getIntDomain_LeftSquareBracketKeyword_0ElementType());
		}
		kw='['
		{
			doneLeaf(kw);
		}
		{
			markComposite(elementTypeProvider.getIntDomain_IntValueParserRuleCall_1ElementType());
		}
		ruleIntValue
		{
			doneComposite();
		}
		{
			markLeaf(elementTypeProvider.getIntDomain_FullStopFullStopKeyword_2ElementType());
		}
		kw='..'
		{
			doneLeaf(kw);
		}
		{
			markComposite(elementTypeProvider.getIntDomain_IntValueParserRuleCall_3ElementType());
		}
		ruleIntValue
		{
			doneComposite();
		}
		{
			markLeaf(elementTypeProvider.getIntDomain_RightSquareBracketKeyword_4ElementType());
		}
		kw=']'
		{
			doneLeaf(kw);
		}
	)
;

//Entry rule entryRuleEnumeration
entryRuleEnumeration returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getEnumerationElementType()); }
	iv_ruleEnumeration=ruleEnumeration
	{ $current=$iv_ruleEnumeration.current; }
	EOF;

// Rule Enumeration
ruleEnumeration returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getEnumeration_IntEnumerationParserRuleCall_0ElementType());
		}
		ruleIntEnumeration
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getEnumeration_StringEnumerationParserRuleCall_1ElementType());
		}
		ruleStringEnumeration
		{
			doneComposite();
		}
	)
;

//Entry rule entryRuleIntEnumeration
entryRuleIntEnumeration returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getIntEnumerationElementType()); }
	iv_ruleIntEnumeration=ruleIntEnumeration
	{ $current=$iv_ruleIntEnumeration.current; }
	EOF;

// Rule IntEnumeration
ruleIntEnumeration returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getIntEnumeration_LeftCurlyBracketKeyword_0ElementType());
		}
		kw='{'
		{
			doneLeaf(kw);
		}
		{
			markComposite(elementTypeProvider.getIntEnumeration_IntValueParserRuleCall_1ElementType());
		}
		ruleIntValue
		{
			doneComposite();
		}
		(
			{
				markLeaf(elementTypeProvider.getIntEnumeration_CommaKeyword_2_0ElementType());
			}
			kw=','
			{
				doneLeaf(kw);
			}
			{
				markComposite(elementTypeProvider.getIntEnumeration_IntValueParserRuleCall_2_1ElementType());
			}
			ruleIntValue
			{
				doneComposite();
			}
		)+
		{
			markLeaf(elementTypeProvider.getIntEnumeration_RightCurlyBracketKeyword_3ElementType());
		}
		kw='}'
		{
			doneLeaf(kw);
		}
	)
;

//Entry rule entryRuleStringEnumeration
entryRuleStringEnumeration returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getStringEnumerationElementType()); }
	iv_ruleStringEnumeration=ruleStringEnumeration
	{ $current=$iv_ruleStringEnumeration.current; }
	EOF;

// Rule StringEnumeration
ruleStringEnumeration returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getStringEnumeration_LeftCurlyBracketKeyword_0ElementType());
		}
		kw='{'
		{
			doneLeaf(kw);
		}
		{
			markComposite(elementTypeProvider.getStringEnumeration_StringsParserRuleCall_1ElementType());
		}
		rulestrings
		{
			doneComposite();
		}
		(
			{
				markLeaf(elementTypeProvider.getStringEnumeration_CommaKeyword_2_0ElementType());
			}
			kw=','
			{
				doneLeaf(kw);
			}
			{
				markComposite(elementTypeProvider.getStringEnumeration_StringsParserRuleCall_2_1ElementType());
			}
			rulestrings
			{
				doneComposite();
			}
		)+
		{
			markLeaf(elementTypeProvider.getStringEnumeration_RightCurlyBracketKeyword_3ElementType());
		}
		kw='}'
		{
			doneLeaf(kw);
		}
	)
;

//Entry rule entryRulemax
entryRulemax returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getMaxElementType()); }
	iv_rulemax=rulemax
	{ $current=$iv_rulemax.current; }
	EOF;

// Rule max
rulemax returns [Boolean current=false]
:
	{
		markComposite(elementTypeProvider.getMax_IntValueParserRuleCallElementType());
	}
	ruleIntValue
	{
		doneComposite();
	}
;

//Entry rule entryRulemin
entryRulemin returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getMinElementType()); }
	iv_rulemin=rulemin
	{ $current=$iv_rulemin.current; }
	EOF;

// Rule min
rulemin returns [Boolean current=false]
:
	{
		markComposite(elementTypeProvider.getMin_IntValueParserRuleCallElementType());
	}
	ruleIntValue
	{
		doneComposite();
	}
;

//Entry rule entryRulestrings
entryRulestrings returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getStringsElementType()); }
	iv_rulestrings=rulestrings
	{ $current=$iv_rulestrings.current; }
	EOF;

// Rule strings
rulestrings returns [Boolean current=false]
:
	{
		markLeaf(elementTypeProvider.getStrings_STRINGTerminalRuleCallElementType());
	}
	this_STRING_0=RULE_STRING
	{
		doneLeaf(this_STRING_0);
	}
;

//Entry rule entryRuleState
entryRuleState returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getStateElementType()); }
	iv_ruleState=ruleState
	{ $current=$iv_ruleState.current; }
	EOF;

// Rule State
ruleState returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getState_SimpleConstraintStateParserRuleCall_0ElementType());
		}
		this_SimpleConstraintState_0=ruleSimpleConstraintState
		{
			$current = $this_SimpleConstraintState_0.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getState_CompositeStateParserRuleCall_1ElementType());
		}
		this_CompositeState_1=ruleCompositeState
		{
			$current = $this_CompositeState_1.current;
			doneComposite();
		}
	)
;

//Entry rule entryRuleTransition
entryRuleTransition returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getTransitionElementType()); }
	iv_ruleTransition=ruleTransition
	{ $current=$iv_ruleTransition.current; }
	EOF;

// Rule Transition
ruleTransition returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getTransition_StartTransitionParserRuleCall_0ElementType());
		}
		this_StartTransition_0=ruleStartTransition
		{
			$current = $this_StartTransition_0.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getTransition_EndTransitionParserRuleCall_1ElementType());
		}
		this_EndTransition_1=ruleEndTransition
		{
			$current = $this_EndTransition_1.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getTransition_FullTransitionParserRuleCall_2ElementType());
		}
		this_FullTransition_2=ruleFullTransition
		{
			$current = $this_FullTransition_2.current;
			doneComposite();
		}
	)
;

//Entry rule entryRuleStartTransition
entryRuleStartTransition returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getStartTransitionElementType()); }
	iv_ruleStartTransition=ruleStartTransition
	{ $current=$iv_ruleStartTransition.current; }
	EOF;

// Rule StartTransition
ruleStartTransition returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getStartTransition_StartKeyword_0ElementType());
		}
		otherlv_0='Start'
		{
			doneLeaf(otherlv_0);
		}
		{
			markLeaf(elementTypeProvider.getStartTransition_TransitionKeyword_1ElementType());
		}
		otherlv_1='transition'
		{
			doneLeaf(otherlv_1);
		}
		{
			markLeaf(elementTypeProvider.getStartTransition_ToKeyword_2ElementType());
		}
		otherlv_2='to'
		{
			doneLeaf(otherlv_2);
		}
		(
			(
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					markComposite(elementTypeProvider.getStartTransition_TargetStateStateCrossReference_3_0ElementType());
				}
				ruleFQN
				{
					doneComposite();
				}
			)
		)
	)
;

//Entry rule entryRuleEndTransition
entryRuleEndTransition returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getEndTransitionElementType()); }
	iv_ruleEndTransition=ruleEndTransition
	{ $current=$iv_ruleEndTransition.current; }
	EOF;

// Rule EndTransition
ruleEndTransition returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getEndTransition_EndKeyword_0ElementType());
		}
		otherlv_0='End'
		{
			doneLeaf(otherlv_0);
		}
		{
			markLeaf(elementTypeProvider.getEndTransition_TransitionKeyword_1ElementType());
		}
		otherlv_1='transition'
		{
			doneLeaf(otherlv_1);
		}
		{
			markLeaf(elementTypeProvider.getEndTransition_FromKeyword_2ElementType());
		}
		otherlv_2='from'
		{
			doneLeaf(otherlv_2);
		}
		(
			(
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					markComposite(elementTypeProvider.getEndTransition_SourceStateStateCrossReference_3_0ElementType());
				}
				ruleFQN
				{
					doneComposite();
				}
			)
		)
	)
;

//Entry rule entryRuleFullTransition
entryRuleFullTransition returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getFullTransitionElementType()); }
	iv_ruleFullTransition=ruleFullTransition
	{ $current=$iv_ruleFullTransition.current; }
	EOF;

// Rule FullTransition
ruleFullTransition returns [Boolean current=false]
:
	(
		(
			{
				markLeaf(elementTypeProvider.getFullTransition_WhenKeyword_0_0ElementType());
			}
			otherlv_0='When'
			{
				doneLeaf(otherlv_0);
			}
			(
				(
					{
						if (!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
					{
						markComposite(elementTypeProvider.getFullTransition_StateStateCrossReference_0_1_0ElementType());
					}
					ruleFQN
					{
						doneComposite();
					}
				)
			)
		)?
		{
			markLeaf(elementTypeProvider.getFullTransition_IfKeyword_1ElementType());
		}
		otherlv_2='if'
		{
			doneLeaf(otherlv_2);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getFullTransition_EventEventParserRuleCall_2_0ElementType());
				}
				lv_event_3_0=ruleEvent
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getFullTransition_TransitionKeyword_3ElementType());
		}
		otherlv_4='transition'
		{
			doneLeaf(otherlv_4);
		}
		{
			markLeaf(elementTypeProvider.getFullTransition_FromKeyword_4ElementType());
		}
		otherlv_5='from'
		{
			doneLeaf(otherlv_5);
		}
		(
			(
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					markComposite(elementTypeProvider.getFullTransition_SourceStateStateCrossReference_5_0ElementType());
				}
				ruleFQN
				{
					doneComposite();
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getFullTransition_ToKeyword_6ElementType());
		}
		otherlv_7='to'
		{
			doneLeaf(otherlv_7);
		}
		(
			(
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					markComposite(elementTypeProvider.getFullTransition_TargetStateStateCrossReference_7_0ElementType());
				}
				ruleFQN
				{
					doneComposite();
				}
			)
		)
	)
;

//Entry rule entryRuleEvent
entryRuleEvent returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getEventElementType()); }
	iv_ruleEvent=ruleEvent
	{ $current=$iv_ruleEvent.current; }
	EOF;

// Rule Event
ruleEvent returns [Boolean current=false]
:
	(
		(
			{
				precedeComposite(elementTypeProvider.getEvent_EventAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		(
			(
				{
					markComposite(elementTypeProvider.getEvent_EvOccEventOccurenceParserRuleCall_1_0ElementType());
				}
				lv_evOcc_1_0=ruleEventOccurence
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
		(
			(
				(
					{
						markLeaf(elementTypeProvider.getEvent_OperatorReverseSolidusSolidusKeyword_2_0_0ElementType());
					}
					lv_operator_2_1='\\/'
					{
						doneLeaf(lv_operator_2_1);
					}
					{
						if (!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
					    |
					{
						markLeaf(elementTypeProvider.getEvent_OperatorSolidusReverseSolidusKeyword_2_0_1ElementType());
					}
					lv_operator_2_2='/\\'
					{
						doneLeaf(lv_operator_2_2);
					}
					{
						if (!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)?
		(
			(
				{
					markComposite(elementTypeProvider.getEvent_SttOccStateOccurenceParserRuleCall_3_0ElementType());
				}
				lv_sttOcc_3_0=ruleStateOccurence
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
	)
;

//Entry rule entryRuleEventOccurence
entryRuleEventOccurence returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getEventOccurenceElementType()); }
	iv_ruleEventOccurence=ruleEventOccurence
	{ $current=$iv_ruleEventOccurence.current; }
	EOF;

// Rule EventOccurence
ruleEventOccurence returns [Boolean current=false]
:
	(
		(
			{
				markComposite(elementTypeProvider.getEventOccurence_EventExpressionConstraintParserRuleCall_0ElementType());
			}
			lv_eventExpression_0_0=ruleConstraint
			{
				doneComposite();
				if(!$current) {
					associateWithSemanticElement();
					$current = true;
				}
			}
		)
	)
;

//Entry rule entryRuleStateOccurence
entryRuleStateOccurence returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getStateOccurenceElementType()); }
	iv_ruleStateOccurence=ruleStateOccurence
	{ $current=$iv_ruleStateOccurence.current; }
	EOF;

// Rule StateOccurence
ruleStateOccurence returns [Boolean current=false]
:
	(
		(
			{
				markComposite(elementTypeProvider.getStateOccurence_StateExpressionStateConstraintParserRuleCall_0ElementType());
			}
			lv_stateExpression_0_0=ruleStateConstraint
			{
				doneComposite();
				if(!$current) {
					associateWithSemanticElement();
					$current = true;
				}
			}
		)
	)
;

//Entry rule entryRuleStateConstraint
entryRuleStateConstraint returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getStateConstraintElementType()); }
	iv_ruleStateConstraint=ruleStateConstraint
	{ $current=$iv_ruleStateConstraint.current; }
	EOF;

// Rule StateConstraint
ruleStateConstraint returns [Boolean current=false]
:
	{
		markComposite(elementTypeProvider.getStateConstraint_Or_stateParserRuleCallElementType());
	}
	this_Or_state_0=ruleOr_state
	{
		$current = $this_Or_state_0.current;
		doneComposite();
	}
;

//Entry rule entryRuleOr_state
entryRuleOr_state returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getOr_stateElementType()); }
	iv_ruleOr_state=ruleOr_state
	{ $current=$iv_ruleOr_state.current; }
	EOF;

// Rule Or_state
ruleOr_state returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getOr_state_And_stateParserRuleCall_0ElementType());
		}
		this_And_state_0=ruleAnd_state
		{
			$current = $this_And_state_0.current;
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getOr_state_Or_stateLeftAction_1_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			{
				markLeaf(elementTypeProvider.getOr_state_ReverseSolidusSolidusKeyword_1_1ElementType());
			}
			otherlv_2='\\/'
			{
				doneLeaf(otherlv_2);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getOr_state_RipeAnd_stateParserRuleCall_1_2_0ElementType());
					}
					lv_ripe_3_0=ruleAnd_state
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)*
	)
;

//Entry rule entryRuleAnd_state
entryRuleAnd_state returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getAnd_stateElementType()); }
	iv_ruleAnd_state=ruleAnd_state
	{ $current=$iv_ruleAnd_state.current; }
	EOF;

// Rule And_state
ruleAnd_state returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getAnd_state_StateNameParserRuleCall_0ElementType());
		}
		this_StateName_0=ruleStateName
		{
			$current = $this_StateName_0.current;
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getAnd_state_And_stateLeftAction_1_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			{
				markLeaf(elementTypeProvider.getAnd_state_SolidusReverseSolidusKeyword_1_1ElementType());
			}
			otherlv_2='/\\'
			{
				doneLeaf(otherlv_2);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getAnd_state_RipeStateNameParserRuleCall_1_2_0ElementType());
					}
					lv_ripe_3_0=ruleStateName
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)*
	)
;

//Entry rule entryRuleStateName
entryRuleStateName returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getStateNameElementType()); }
	iv_ruleStateName=ruleStateName
	{ $current=$iv_ruleStateName.current; }
	EOF;

// Rule StateName
ruleStateName returns [Boolean current=false]
:
	(
		(
			{
				precedeComposite(elementTypeProvider.getStateName_StateNameRefAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		(
			(
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					markComposite(elementTypeProvider.getStateName_ValueStateCrossReference_1_0ElementType());
				}
				ruleFQN
				{
					doneComposite();
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getStateName_EqualsSignKeyword_2ElementType());
		}
		otherlv_2='='
		{
			doneLeaf(otherlv_2);
		}
		{
			markLeaf(elementTypeProvider.getStateName_DigitOneKeyword_3ElementType());
		}
		otherlv_3='1'
		{
			doneLeaf(otherlv_3);
		}
	)
;

//Entry rule entryRuleCompositeState
entryRuleCompositeState returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getCompositeStateElementType()); }
	iv_ruleCompositeState=ruleCompositeState
	{ $current=$iv_ruleCompositeState.current; }
	EOF;

// Rule CompositeState
ruleCompositeState returns [Boolean current=false]
:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getCompositeState_TypeCompositeStateKeyword_0_0ElementType());
				}
				lv_type_0_0='compositeState'
				{
					doneLeaf(lv_type_0_0);
				}
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		(
			(
				{
					markLeaf(elementTypeProvider.getCompositeState_NameIDTerminalRuleCall_1_0ElementType());
				}
				lv_name_1_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_1_0);
				}
			)
		)
		(
			(
				{
					markComposite(elementTypeProvider.getCompositeState_ConcernlevelConcernLevelParserRuleCall_2_0ElementType());
				}
				lv_concernlevel_2_0=ruleConcernLevel
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)+
		{
			markLeaf(elementTypeProvider.getCompositeState_End_compositeStateKeyword_3ElementType());
		}
		otherlv_3='end_compositeState'
		{
			doneLeaf(otherlv_3);
		}
		(
			(
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					markLeaf(elementTypeProvider.getCompositeState_EndCompositeStateCompositeStateCrossReference_4_0ElementType());
				}
				otherlv_4=RULE_ID
				{
					doneLeaf(otherlv_4);
				}
			)
		)
	)
;

//Entry rule entryRuleConcernLevel
entryRuleConcernLevel returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getConcernLevelElementType()); }
	iv_ruleConcernLevel=ruleConcernLevel
	{ $current=$iv_ruleConcernLevel.current; }
	EOF;

// Rule ConcernLevel
ruleConcernLevel returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getConcernLevel_ConcernLevelKeyword_0ElementType());
		}
		otherlv_0='concernLevel'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getConcernLevel_NameIDTerminalRuleCall_1_0ElementType());
				}
				lv_name_1_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_1_0);
				}
			)
		)
		(
			(
				{
					markComposite(elementTypeProvider.getConcernLevel_StateStateParserRuleCall_2_0ElementType());
				}
				lv_state_2_0=ruleState
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)+
		{
			markLeaf(elementTypeProvider.getConcernLevel_End_concernLevelKeyword_3ElementType());
		}
		otherlv_3='end_concernLevel'
		{
			doneLeaf(otherlv_3);
		}
		(
			(
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					markLeaf(elementTypeProvider.getConcernLevel_EndConcernLevelConcernLevelCrossReference_4_0ElementType());
				}
				otherlv_4=RULE_ID
				{
					doneLeaf(otherlv_4);
				}
			)
		)
	)
;

//Entry rule entryRuleSimpleConstraintState
entryRuleSimpleConstraintState returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getSimpleConstraintStateElementType()); }
	iv_ruleSimpleConstraintState=ruleSimpleConstraintState
	{ $current=$iv_ruleSimpleConstraintState.current; }
	EOF;

// Rule SimpleConstraintState
ruleSimpleConstraintState returns [Boolean current=false]
:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getSimpleConstraintState_TypeSimpleConstraintStateKeyword_0_0ElementType());
				}
				lv_type_0_0='simpleConstraintState'
				{
					doneLeaf(lv_type_0_0);
				}
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		(
			(
				{
					markLeaf(elementTypeProvider.getSimpleConstraintState_NameIDTerminalRuleCall_1_0ElementType());
				}
				lv_name_1_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_1_0);
				}
			)
		)
		(
			(
				{
					markComposite(elementTypeProvider.getSimpleConstraintState_NewVariableVariableParserRuleCall_2_0ElementType());
				}
				lv_newVariable_2_0=ruleVariable
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)*
		(
			(
				{
					markComposite(elementTypeProvider.getSimpleConstraintState_ConstraintConstraintParserRuleCall_3_0ElementType());
				}
				lv_constraint_3_0=ruleConstraint
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)+
	)
;

//Entry rule entryRuleConstraint
entryRuleConstraint returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getConstraintElementType()); }
	iv_ruleConstraint=ruleConstraint
	{ $current=$iv_ruleConstraint.current; }
	EOF;

// Rule Constraint
ruleConstraint returns [Boolean current=false]
:
	{
		markComposite(elementTypeProvider.getConstraint_Log_exprParserRuleCallElementType());
	}
	this_Log_expr_0=ruleLog_expr
	{
		$current = $this_Log_expr_0.current;
		doneComposite();
	}
;

//Entry rule entryRuleLog_expr
entryRuleLog_expr returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getLog_exprElementType()); }
	iv_ruleLog_expr=ruleLog_expr
	{ $current=$iv_ruleLog_expr.current; }
	EOF;

// Rule Log_expr
ruleLog_expr returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getLog_expr_Or_exprParserRuleCall_0ElementType());
		}
		this_Or_expr_0=ruleOr_expr
		{
			$current = $this_Or_expr_0.current;
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getLog_expr_Log_exprLeftAction_1_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			(
				(
					(
						{
							markLeaf(elementTypeProvider.getLog_expr_OperatorHyphenMinusGreaterThanSignKeyword_1_1_0_0ElementType());
						}
						lv_operator_2_1='->'
						{
							doneLeaf(lv_operator_2_1);
						}
						{
							if (!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
						    |
						{
							markLeaf(elementTypeProvider.getLog_expr_OperatorLessThanSignHyphenMinusGreaterThanSignKeyword_1_1_0_1ElementType());
						}
						lv_operator_2_2='<->'
						{
							doneLeaf(lv_operator_2_2);
						}
						{
							if (!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
						    |
						{
							markLeaf(elementTypeProvider.getLog_expr_OperatorLessThanSignHyphenMinusKeyword_1_1_0_2ElementType());
						}
						lv_operator_2_3='<-'
						{
							doneLeaf(lv_operator_2_3);
						}
						{
							if (!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
			)
			(
				(
					{
						markComposite(elementTypeProvider.getLog_expr_RightOr_exprParserRuleCall_1_2_0ElementType());
					}
					lv_right_3_0=ruleOr_expr
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)*
	)
;

//Entry rule entryRuleOr_expr
entryRuleOr_expr returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getOr_exprElementType()); }
	iv_ruleOr_expr=ruleOr_expr
	{ $current=$iv_ruleOr_expr.current; }
	EOF;

// Rule Or_expr
ruleOr_expr returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getOr_expr_And_exprParserRuleCall_0ElementType());
		}
		this_And_expr_0=ruleAnd_expr
		{
			$current = $this_And_expr_0.current;
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getOr_expr_Or_exprLeftAction_1_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			{
				markLeaf(elementTypeProvider.getOr_expr_SolidusReverseSolidusKeyword_1_1ElementType());
			}
			otherlv_2='/\\'
			{
				doneLeaf(otherlv_2);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getOr_expr_RightAnd_exprParserRuleCall_1_2_0ElementType());
					}
					lv_right_3_0=ruleAnd_expr
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)*
	)
;

//Entry rule entryRuleAnd_expr
entryRuleAnd_expr returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getAnd_exprElementType()); }
	iv_ruleAnd_expr=ruleAnd_expr
	{ $current=$iv_ruleAnd_expr.current; }
	EOF;

// Rule And_expr
ruleAnd_expr returns [Boolean current=false]
:
	(
		(
			{
				markComposite(elementTypeProvider.getAnd_expr_Compare_exprParserRuleCall_0_0ElementType());
			}
			this_Compare_expr_0=ruleCompare_expr
			{
				$current = $this_Compare_expr_0.current;
				doneComposite();
			}
			    |
			{
				markComposite(elementTypeProvider.getAnd_expr_GlobalConstraintParserRuleCall_0_1ElementType());
			}
			this_GlobalConstraint_1=ruleGlobalConstraint
			{
				$current = $this_GlobalConstraint_1.current;
				doneComposite();
			}
		)
		(
			(
				{
					precedeComposite(elementTypeProvider.getAnd_expr_And_exprLeftAction_1_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			{
				markLeaf(elementTypeProvider.getAnd_expr_ReverseSolidusSolidusKeyword_1_1ElementType());
			}
			otherlv_3='\\/'
			{
				doneLeaf(otherlv_3);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getAnd_expr_RightCompare_exprParserRuleCall_1_2_0ElementType());
					}
					lv_right_4_0=ruleCompare_expr
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)*
	)
;

//Entry rule entryRuleCompare_expr
entryRuleCompare_expr returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getCompare_exprElementType()); }
	iv_ruleCompare_expr=ruleCompare_expr
	{ $current=$iv_ruleCompare_expr.current; }
	EOF;

// Rule Compare_expr
ruleCompare_expr returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getCompare_expr_Math_exprParserRuleCall_0ElementType());
		}
		this_math_expr_0=rulemath_expr
		{
			$current = $this_math_expr_0.current;
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getCompare_expr_Compare_exprLeftAction_1_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			(
				(
					(
						{
							markLeaf(elementTypeProvider.getCompare_expr_OperatorGreaterThanSignEqualsSignKeyword_1_1_0_0ElementType());
						}
						lv_operator_2_1='>='
						{
							doneLeaf(lv_operator_2_1);
						}
						{
							if (!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
						    |
						{
							markLeaf(elementTypeProvider.getCompare_expr_OperatorLessThanSignEqualsSignKeyword_1_1_0_1ElementType());
						}
						lv_operator_2_2='<='
						{
							doneLeaf(lv_operator_2_2);
						}
						{
							if (!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
						    |
						{
							markLeaf(elementTypeProvider.getCompare_expr_OperatorEqualsSignKeyword_1_1_0_2ElementType());
						}
						lv_operator_2_3='='
						{
							doneLeaf(lv_operator_2_3);
						}
						{
							if (!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
						    |
						{
							markLeaf(elementTypeProvider.getCompare_expr_OperatorExclamationMarkEqualsSignKeyword_1_1_0_3ElementType());
						}
						lv_operator_2_4='!='
						{
							doneLeaf(lv_operator_2_4);
						}
						{
							if (!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
						    |
						{
							markLeaf(elementTypeProvider.getCompare_expr_OperatorGreaterThanSignKeyword_1_1_0_4ElementType());
						}
						lv_operator_2_5='>'
						{
							doneLeaf(lv_operator_2_5);
						}
						{
							if (!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
						    |
						{
							markLeaf(elementTypeProvider.getCompare_expr_OperatorLessThanSignKeyword_1_1_0_5ElementType());
						}
						lv_operator_2_6='<'
						{
							doneLeaf(lv_operator_2_6);
						}
						{
							if (!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
			)
			(
				(
					{
						markComposite(elementTypeProvider.getCompare_expr_RightMath_exprParserRuleCall_1_2_0ElementType());
					}
					lv_right_3_0=rulemath_expr
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)*
	)
;

//Entry rule entryRulemath_expr
entryRulemath_expr returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getMath_exprElementType()); }
	iv_rulemath_expr=rulemath_expr
	{ $current=$iv_rulemath_expr.current; }
	EOF;

// Rule math_expr
rulemath_expr returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getMath_expr_TermParserRuleCall_0ElementType());
		}
		this_term_0=ruleterm
		{
			$current = $this_term_0.current;
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getMath_expr_Math_exprLeftAction_1_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			(
				{
					markLeaf(elementTypeProvider.getMath_expr_PlusSignKeyword_1_1_0ElementType());
				}
				otherlv_2='+'
				{
					doneLeaf(otherlv_2);
				}
				    |
				{
					markLeaf(elementTypeProvider.getMath_expr_AsteriskKeyword_1_1_1ElementType());
				}
				otherlv_3='*'
				{
					doneLeaf(otherlv_3);
				}
			)
			(
				(
					{
						markComposite(elementTypeProvider.getMath_expr_RightTermParserRuleCall_1_2_0ElementType());
					}
					lv_right_4_0=ruleterm
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)*
	)
;

//Entry rule entryRuleterm
entryRuleterm returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getTermElementType()); }
	iv_ruleterm=ruleterm
	{ $current=$iv_ruleterm.current; }
	EOF;

// Rule term
ruleterm returns [Boolean current=false]
:
	(
		(
			{
				markLeaf(elementTypeProvider.getTerm_LeftParenthesisKeyword_0_0ElementType());
			}
			otherlv_0='('
			{
				doneLeaf(otherlv_0);
			}
			{
				markComposite(elementTypeProvider.getTerm_ConstraintParserRuleCall_0_1ElementType());
			}
			this_Constraint_1=ruleConstraint
			{
				$current = $this_Constraint_1.current;
				doneComposite();
			}
			{
				markLeaf(elementTypeProvider.getTerm_RightParenthesisKeyword_0_2ElementType());
			}
			otherlv_2=')'
			{
				doneLeaf(otherlv_2);
			}
		)
		    |
		(
			(
				{
					precedeComposite(elementTypeProvider.getTerm_NotAction_1_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			{
				markLeaf(elementTypeProvider.getTerm_NotKeyword_1_1ElementType());
			}
			otherlv_4='not'
			{
				doneLeaf(otherlv_4);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getTerm_ConstraintTermParserRuleCall_1_2_0ElementType());
					}
					lv_Constraint_5_0=ruleterm
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)
		    |
		{
			markComposite(elementTypeProvider.getTerm_AtomicParserRuleCall_2ElementType());
		}
		this_Atomic_6=ruleAtomic
		{
			$current = $this_Atomic_6.current;
			doneComposite();
		}
	)
;

//Entry rule entryRuleAtomic
entryRuleAtomic returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getAtomicElementType()); }
	iv_ruleAtomic=ruleAtomic
	{ $current=$iv_ruleAtomic.current; }
	EOF;

// Rule Atomic
ruleAtomic returns [Boolean current=false]
:
	(
		(
			(
				{
					precedeComposite(elementTypeProvider.getAtomic_ConstantAction_0_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			(
				(
					{
						markComposite(elementTypeProvider.getAtomic_ValueConstantParserRuleCall_0_1_0ElementType());
					}
					lv_value_1_0=ruleConstant
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)
		    |
		(
			(
				{
					precedeComposite(elementTypeProvider.getAtomic_VarAction_1_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			(
				(
					{
						markComposite(elementTypeProvider.getAtomic_ValueVariableNameParserRuleCall_1_1_0ElementType());
					}
					lv_value_3_0=ruleVariableName
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)
		    |
		(
			(
				{
					precedeComposite(elementTypeProvider.getAtomic_StringAction_2_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			(
				(
					{
						markComposite(elementTypeProvider.getAtomic_ValueStringsParserRuleCall_2_1_0ElementType());
					}
					lv_value_5_0=rulestrings
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)
	)
;

//Entry rule entryRuleVariableName
entryRuleVariableName returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getVariableNameElementType()); }
	iv_ruleVariableName=ruleVariableName
	{ $current=$iv_ruleVariableName.current; }
	EOF;

// Rule VariableName
ruleVariableName returns [Boolean current=false]
:
	(
		(
			(
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					markLeaf(elementTypeProvider.getVariableName_NameVariableCrossReference_0_0ElementType());
				}
				otherlv_0=RULE_ID
				{
					doneLeaf(otherlv_0);
				}
			)
		)
		(
			{
				markLeaf(elementTypeProvider.getVariableName_LeftSquareBracketKeyword_1_0ElementType());
			}
			otherlv_1='['
			{
				doneLeaf(otherlv_1);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getVariableName_InstanceIntValueParserRuleCall_1_1_0ElementType());
					}
					lv_instance_2_0=ruleIntValue
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			{
				markLeaf(elementTypeProvider.getVariableName_RightSquareBracketKeyword_1_2ElementType());
			}
			otherlv_3=']'
			{
				doneLeaf(otherlv_3);
			}
		)?
	)
;

//Entry rule entryRuleGlobalConstraint
entryRuleGlobalConstraint returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getGlobalConstraintElementType()); }
	iv_ruleGlobalConstraint=ruleGlobalConstraint
	{ $current=$iv_ruleGlobalConstraint.current; }
	EOF;

// Rule GlobalConstraint
ruleGlobalConstraint returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getGlobalConstraint_Group_valuationParserRuleCall_0ElementType());
		}
		this_group_valuation_0=rulegroup_valuation
		{
			$current = $this_group_valuation_0.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getGlobalConstraint_Group_most_leastParserRuleCall_1ElementType());
		}
		this_group_most_least_1=rulegroup_most_least
		{
			$current = $this_group_most_least_1.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getGlobalConstraint_Max_MinParserRuleCall_2ElementType());
		}
		this_Max_Min_2=ruleMax_Min
		{
			$current = $this_Max_Min_2.current;
			doneComposite();
		}
	)
;

//Entry rule entryRulegroup_most_least
entryRulegroup_most_least returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getGroup_most_leastElementType()); }
	iv_rulegroup_most_least=rulegroup_most_least
	{ $current=$iv_rulegroup_most_least.current; }
	EOF;

// Rule group_most_least
rulegroup_most_least returns [Boolean current=false]
:
	(
		(
			{
				markLeaf(elementTypeProvider.getGroup_most_least_At_leastKeyword_0_0ElementType());
			}
			otherlv_0='at_least('
			{
				doneLeaf(otherlv_0);
			}
			    |
			{
				markLeaf(elementTypeProvider.getGroup_most_least_At_mostKeyword_0_1ElementType());
			}
			otherlv_1='at_most('
			{
				doneLeaf(otherlv_1);
			}
		)
		(
			(
				{
					markComposite(elementTypeProvider.getGroup_most_least_InstancesIntValueParserRuleCall_1_0ElementType());
				}
				lv_instances_2_0=ruleIntValue
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getGroup_most_least_CommaKeyword_2ElementType());
		}
		otherlv_3=','
		{
			doneLeaf(otherlv_3);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getGroup_most_least_VariablesVarEnumerationParserRuleCall_3_0ElementType());
				}
				lv_variables_4_0=rulevarEnumeration
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getGroup_most_least_RightSquareBracketKeyword_4ElementType());
		}
		otherlv_5=']'
		{
			doneLeaf(otherlv_5);
		}
		{
			markLeaf(elementTypeProvider.getGroup_most_least_CommaKeyword_5ElementType());
		}
		otherlv_6=','
		{
			doneLeaf(otherlv_6);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getGroup_most_least_AtomicAtomicParserRuleCall_6_0ElementType());
				}
				lv_atomic_7_0=ruleAtomic
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getGroup_most_least_RightParenthesisKeyword_7ElementType());
		}
		otherlv_8=')'
		{
			doneLeaf(otherlv_8);
		}
	)
;

//Entry rule entryRulegroup_valuation
entryRulegroup_valuation returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getGroup_valuationElementType()); }
	iv_rulegroup_valuation=rulegroup_valuation
	{ $current=$iv_rulegroup_valuation.current; }
	EOF;

// Rule group_valuation
rulegroup_valuation returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getGroup_valuation_All_equalKeyword_0ElementType());
		}
		otherlv_0='all_equal('
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getGroup_valuation_VarVarEnumerationParserRuleCall_1_0ElementType());
				}
				lv_var_1_0=rulevarEnumeration
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getGroup_valuation_CommaKeyword_2ElementType());
		}
		otherlv_2=','
		{
			doneLeaf(otherlv_2);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getGroup_valuation_AtomicAtomicParserRuleCall_3_0ElementType());
				}
				lv_atomic_3_0=ruleAtomic
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getGroup_valuation_RightSquareBracketKeyword_4ElementType());
		}
		otherlv_4=']'
		{
			doneLeaf(otherlv_4);
		}
		{
			markLeaf(elementTypeProvider.getGroup_valuation_RightParenthesisKeyword_5ElementType());
		}
		otherlv_5=')'
		{
			doneLeaf(otherlv_5);
		}
	)
;

//Entry rule entryRuleMax_Min
entryRuleMax_Min returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getMax_MinElementType()); }
	iv_ruleMax_Min=ruleMax_Min
	{ $current=$iv_ruleMax_Min.current; }
	EOF;

// Rule Max_Min
ruleMax_Min returns [Boolean current=false]
:
	(
		(
			{
				markLeaf(elementTypeProvider.getMax_Min_MaximumKeyword_0_0ElementType());
			}
			otherlv_0='maximum('
			{
				doneLeaf(otherlv_0);
			}
			    |
			{
				markLeaf(elementTypeProvider.getMax_Min_MinimumKeyword_0_1ElementType());
			}
			otherlv_1='minimum('
			{
				doneLeaf(otherlv_1);
			}
		)
		(
			(
				{
					markComposite(elementTypeProvider.getMax_Min_VarVariableNameParserRuleCall_1_0ElementType());
				}
				lv_var_2_0=ruleVariableName
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getMax_Min_CommaKeyword_2ElementType());
		}
		otherlv_3=','
		{
			doneLeaf(otherlv_3);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getMax_Min_VarVarEnumerationParserRuleCall_3_0ElementType());
				}
				lv_var_4_0=rulevarEnumeration
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getMax_Min_RightSquareBracketKeyword_4ElementType());
		}
		otherlv_5=']'
		{
			doneLeaf(otherlv_5);
		}
		{
			markLeaf(elementTypeProvider.getMax_Min_RightParenthesisKeyword_5ElementType());
		}
		otherlv_6=')'
		{
			doneLeaf(otherlv_6);
		}
	)
;

//Entry rule entryRulevarEnumeration
entryRulevarEnumeration returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getVarEnumerationElementType()); }
	iv_rulevarEnumeration=rulevarEnumeration
	{ $current=$iv_rulevarEnumeration.current; }
	EOF;

// Rule varEnumeration
rulevarEnumeration returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getVarEnumeration_LeftSquareBracketKeyword_0ElementType());
		}
		otherlv_0='['
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getVarEnumeration_VarNameVariableNameParserRuleCall_1_0ElementType());
				}
				lv_varName_1_0=ruleVariableName
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		(
			{
				markLeaf(elementTypeProvider.getVarEnumeration_CommaKeyword_2_0ElementType());
			}
			otherlv_2=','
			{
				doneLeaf(otherlv_2);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getVarEnumeration_VarNameVariableNameParserRuleCall_2_1_0ElementType());
					}
					lv_varName_3_0=ruleVariableName
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)+
	)
;

//Entry rule entryRuleFQN
entryRuleFQN returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getFQNElementType()); }
	iv_ruleFQN=ruleFQN
	{ $current=$iv_ruleFQN.current; }
	EOF;

// Rule FQN
ruleFQN returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getFQN_IDTerminalRuleCall_0ElementType());
		}
		this_ID_0=RULE_ID
		{
			doneLeaf(this_ID_0);
		}
		(
			{
				markLeaf(elementTypeProvider.getFQN_FullStopKeyword_1_0ElementType());
			}
			kw='.'
			{
				doneLeaf(kw);
			}
			{
				markLeaf(elementTypeProvider.getFQN_IDTerminalRuleCall_1_1ElementType());
			}
			this_ID_2=RULE_ID
			{
				doneLeaf(this_ID_2);
			}
		)*
	)
;

//Entry rule entryRuleIntValue
entryRuleIntValue returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getIntValueElementType()); }
	iv_ruleIntValue=ruleIntValue
	{ $current=$iv_ruleIntValue.current; }
	EOF;

// Rule IntValue
ruleIntValue returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getIntValue_INTTerminalRuleCall_0ElementType());
		}
		this_INT_0=RULE_INT
		{
			doneLeaf(this_INT_0);
		}
		    |
		{
			markLeaf(elementTypeProvider.getIntValue_DigitZeroKeyword_1ElementType());
		}
		kw='0'
		{
			doneLeaf(kw);
		}
		    |
		{
			markLeaf(elementTypeProvider.getIntValue_DigitOneKeyword_2ElementType());
		}
		kw='1'
		{
			doneLeaf(kw);
		}
	)
;

//Entry rule entryRuleConstant
entryRuleConstant returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getConstantElementType()); }
	iv_ruleConstant=ruleConstant
	{ $current=$iv_ruleConstant.current; }
	EOF;

// Rule Constant
ruleConstant returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getConstant_INTTerminalRuleCall_0ElementType());
		}
		this_INT_0=RULE_INT
		{
			doneLeaf(this_INT_0);
		}
		    |
		(
			{
				markLeaf(elementTypeProvider.getConstant_INTTerminalRuleCall_1_0ElementType());
			}
			this_INT_1=RULE_INT
			{
				doneLeaf(this_INT_1);
			}
			{
				markLeaf(elementTypeProvider.getConstant_FullStopKeyword_1_1ElementType());
			}
			kw='.'
			{
				doneLeaf(kw);
			}
			{
				markLeaf(elementTypeProvider.getConstant_INTTerminalRuleCall_1_2ElementType());
			}
			this_INT_3=RULE_INT
			{
				doneLeaf(this_INT_3);
			}
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getConstant_DigitZeroKeyword_2_0ElementType());
			}
			kw='0'
			{
				doneLeaf(kw);
			}
			    |
			{
				markLeaf(elementTypeProvider.getConstant_DigitOneKeyword_2_1ElementType());
			}
			kw='1'
			{
				doneLeaf(kw);
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
